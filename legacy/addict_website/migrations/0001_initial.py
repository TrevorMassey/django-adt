# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('userrecord', models.IntegerField(unique=True)),
                ('aim', models.CharField(max_length=80)),
                ('charname', models.CharField(max_length=40)),
                ('race', models.IntegerField()),
                ('class_field', models.IntegerField(db_column='class')),
                ('level', models.IntegerField()),
                ('cclass', models.IntegerField()),
                ('clevel', models.IntegerField()),
                ('name', models.CharField(max_length=80)),
                ('bday', models.DateField()),
                ('gender', models.IntegerField()),
                ('location', models.CharField(max_length=160)),
                ('skill', models.CharField(max_length=15)),
                ('playtime', models.TextField()),
                ('history', models.TextField()),
                ('whyjoin', models.TextField()),
                ('raid', models.CharField(max_length=15)),
                ('gamer', models.CharField(max_length=40)),
                ('appdate', models.IntegerField()),
                ('guildexperience', models.TextField()),
                ('repeatcontent', models.TextField()),
                ('personality', models.TextField()),
                ('leadership', models.TextField()),
                ('expectation', models.TextField()),
                ('leveling', models.TextField()),
                ('status', models.IntegerField()),
                ('game', models.IntegerField()),
            ],
            options={
                'db_table': 'applications',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ApplicationsQuestions',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('game', models.IntegerField()),
                ('q1', models.TextField()),
                ('q2', models.TextField()),
                ('q3', models.TextField()),
                ('q4', models.TextField()),
                ('q5', models.TextField()),
                ('q6', models.TextField()),
            ],
            options={
                'db_table': 'applications_questions',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Banned',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('username', models.CharField(max_length=25)),
                ('date', models.IntegerField()),
                ('reason', models.TextField()),
                ('address', models.CharField(max_length=255)),
                ('com', models.IntegerField()),
            ],
            options={
                'db_table': 'banned',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Bannedsoft',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('date', models.IntegerField()),
                ('reason', models.TextField()),
                ('address', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'bannedsoft',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Bugreport',
            fields=[
                ('reportnumber', models.IntegerField(serialize=False, primary_key=True)),
                ('record', models.IntegerField()),
                ('report', models.TextField()),
                ('browser', models.CharField(max_length=150)),
                ('submitted', models.IntegerField()),
                ('reviewed', models.IntegerField()),
            ],
            options={
                'db_table': 'bugreport',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('type', models.IntegerField()),
                ('status', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('info', models.TextField()),
                ('raidnum', models.CharField(max_length=5)),
                ('refnum', models.IntegerField()),
                ('game', models.IntegerField()),
            ],
            options={
                'db_table': 'calendar',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Characters',
            fields=[
                ('char_id', models.IntegerField(serialize=False, primary_key=True)),
                ('user_id', models.IntegerField()),
                ('type', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('race', models.IntegerField()),
                ('class_field', models.IntegerField(db_column='class')),
                ('level', models.IntegerField()),
                ('game', models.IntegerField()),
                ('sync', models.IntegerField()),
                ('sync_id', models.IntegerField()),
            ],
            options={
                'db_table': 'characters',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Chatbox',
            fields=[
                ('postnum', models.IntegerField(serialize=False, primary_key=True)),
                ('record', models.IntegerField()),
                ('username', models.CharField(max_length=15)),
                ('message', models.TextField()),
                ('date', models.IntegerField()),
                ('game', models.IntegerField()),
            ],
            options={
                'db_table': 'chatbox',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('section', models.IntegerField()),
                ('reference', models.IntegerField()),
                ('poster_id', models.IntegerField()),
                ('comment', models.TextField()),
                ('timestamp', models.IntegerField()),
                ('officer', models.IntegerField()),
            ],
            options={
                'db_table': 'comments',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Cookies',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('cookiekey', models.IntegerField()),
                ('username', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=255)),
                ('date', models.IntegerField()),
            ],
            options={
                'db_table': 'cookies',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('divid', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=100)),
                ('leader', models.IntegerField()),
                ('formed', models.IntegerField()),
                ('goal', models.TextField()),
            ],
            options={
                'db_table': 'division',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Favor',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('user', models.IntegerField()),
                ('mod', models.IntegerField()),
                ('from_field', models.IntegerField(db_column='from')),
                ('timestamp', models.IntegerField()),
                ('reason', models.TextField()),
            ],
            options={
                'db_table': 'favor',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GamesList',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('game_name', models.CharField(max_length=250)),
                ('game_icon', models.CharField(max_length=250)),
                ('game_icon_med', models.CharField(max_length=250)),
                ('game_acr', models.CharField(max_length=10)),
                ('launch', models.IntegerField()),
                ('close', models.IntegerField()),
            ],
            options={
                'db_table': 'games_list',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GamesPlaying',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('userrecord', models.IntegerField()),
                ('game', models.IntegerField()),
                ('start', models.IntegerField()),
                ('stop', models.IntegerField()),
            ],
            options={
                'db_table': 'games_playing',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('username', models.CharField(max_length=15, blank=True)),
                ('rank', models.IntegerField(null=True, blank=True)),
                ('game_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'groups',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Leaderapp',
            fields=[
                ('appnum', models.IntegerField(serialize=False, primary_key=True)),
                ('record', models.IntegerField()),
                ('text', models.TextField()),
                ('rank', models.IntegerField()),
                ('divid', models.IntegerField()),
                ('sqdid', models.IntegerField()),
                ('date', models.IntegerField()),
                ('status', models.CharField(max_length=100)),
                ('closereason', models.TextField()),
            ],
            options={
                'db_table': 'leaderapp',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Msgb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('msg_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('author_id', models.IntegerField()),
                ('pm_deleted', models.IntegerField()),
                ('pm_sentdeleted', models.TextField()),
                ('pm_unread', models.IntegerField()),
            ],
            options={
                'db_table': 'msgb',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('creator', models.IntegerField()),
                ('title', models.CharField(max_length=100)),
                ('news', models.TextField()),
                ('date', models.IntegerField()),
                ('access', models.IntegerField()),
                ('cat', models.IntegerField()),
                ('image', models.CharField(max_length=250)),
                ('approved', models.IntegerField()),
                ('game', models.IntegerField()),
            ],
            options={
                'db_table': 'news',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewsCats',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('category_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'news_cats',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('user_id', models.IntegerField()),
                ('vote', models.IntegerField()),
                ('voter_id', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'poll',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Privmsg',
            fields=[
                ('msg_id', models.IntegerField(serialize=False, primary_key=True)),
                ('author_id', models.IntegerField()),
                ('message_time', models.IntegerField()),
                ('subject', models.CharField(max_length=100)),
                ('text', models.TextField()),
            ],
            options={
                'db_table': 'privmsg',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrivmsgTo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('msg_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('author_id', models.IntegerField()),
                ('pm_deleted', models.IntegerField()),
                ('pm_sentdeleted', models.IntegerField()),
                ('pm_unread', models.IntegerField()),
            ],
            options={
                'db_table': 'privmsg_to',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PvpInvites',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('userid', models.IntegerField()),
                ('teamid', models.IntegerField()),
                ('ladderid', models.IntegerField()),
            ],
            options={
                'db_table': 'pvp_invites',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PvpLadders',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=250)),
                ('max', models.IntegerField()),
                ('info', models.TextField()),
            ],
            options={
                'db_table': 'pvp_ladders',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PvpMatches',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('chal_id', models.IntegerField()),
                ('def_id', models.IntegerField()),
                ('ladder_id', models.IntegerField()),
                ('season_id', models.IntegerField()),
                ('chal_date', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'pvp_matches',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PvpMatchesWins',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('season_id', models.IntegerField()),
                ('ladder_id', models.IntegerField()),
                ('winner_id', models.IntegerField()),
                ('loser_id', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('xp_win', models.IntegerField()),
                ('xp_loss', models.IntegerField()),
            ],
            options={
                'db_table': 'pvp_matches_wins',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PvpSeasons',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=250)),
                ('startstamp', models.IntegerField()),
                ('stopstamp', models.IntegerField()),
            ],
            options={
                'db_table': 'pvp_seasons',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PvpTeams',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('ladder_id', models.IntegerField()),
                ('name', models.CharField(max_length=250)),
                ('timestamp', models.IntegerField()),
                ('info', models.TextField()),
            ],
            options={
                'db_table': 'pvp_teams',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PvpTeamsMembers',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('userid', models.IntegerField()),
                ('teamid', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('leader', models.IntegerField()),
            ],
            options={
                'db_table': 'pvp_teams_members',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Quotes',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('poster', models.IntegerField()),
                ('title', models.CharField(max_length=80)),
                ('quote', models.TextField()),
                ('type', models.TextField()),
                ('image', models.TextField()),
                ('posted', models.IntegerField()),
                ('cat', models.IntegerField()),
            ],
            options={
                'db_table': 'quotes',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='QuotesHypes',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('quote', models.IntegerField()),
                ('user', models.IntegerField()),
            ],
            options={
                'db_table': 'quotes_hypes',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidAttendance',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('raid', models.IntegerField()),
                ('charid', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('game', models.IntegerField()),
                ('startstamp', models.IntegerField()),
                ('stopstamp', models.IntegerField()),
                ('type', models.IntegerField()),
                ('unscheduled', models.IntegerField()),
            ],
            options={
                'db_table': 'raid_attendance',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidBonusdkp',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('userid', models.IntegerField()),
                ('game', models.IntegerField()),
                ('dkp', models.IntegerField()),
                ('reason', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'raid_bonusdkp',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidBosses',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('dungeon', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('dkp', models.IntegerField()),
                ('game', models.IntegerField()),
            ],
            options={
                'db_table': 'raid_bosses',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidBosskills',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('raid', models.IntegerField()),
                ('boss', models.IntegerField()),
                ('charid', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'raid_bosskills',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidDungeons',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('dkphour', models.IntegerField()),
                ('game', models.IntegerField()),
            ],
            options={
                'db_table': 'raid_dungeons',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidItemlist',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('game', models.IntegerField()),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'raid_itemlist',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidItems',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('boss', models.IntegerField()),
                ('raid', models.IntegerField()),
                ('item', models.IntegerField()),
                ('dkp', models.IntegerField()),
                ('charid', models.IntegerField()),
            ],
            options={
                'db_table': 'raid_items',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidPerf',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('raid', models.IntegerField()),
                ('dungeon', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('from_userid', models.IntegerField()),
                ('reason', models.TextField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'raid_perf',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RaidRaids',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('title', models.CharField(max_length=255)),
                ('dungeon', models.IntegerField()),
                ('dkphour', models.IntegerField()),
                ('unscheduled', models.IntegerField()),
                ('startstamp', models.IntegerField()),
                ('stopstamp', models.IntegerField()),
                ('game', models.IntegerField()),
                ('status', models.IntegerField()),
                ('leader', models.IntegerField()),
            ],
            options={
                'db_table': 'raid_raids',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('user_id', models.IntegerField()),
                ('type', models.IntegerField()),
                ('amount', models.IntegerField()),
            ],
            options={
                'db_table': 'resources',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResourcesCats',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=250)),
                ('game', models.IntegerField()),
            ],
            options={
                'db_table': 'resources_cats',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RoleMapping',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('userid', models.IntegerField(null=True, db_column='userId', blank=True)),
                ('roleid', models.IntegerField(null=True, db_column='roleId', blank=True)),
                ('gameid', models.IntegerField(null=True, db_column='gameId', blank=True)),
            ],
            options={
                'db_table': 'role_mapping',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('parent', models.IntegerField(null=True, blank=True)),
                ('title', models.TextField(blank=True)),
                ('rank', models.TextField(blank=True)),
                ('oid', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Screenshots',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('title', models.CharField(max_length=35)),
                ('views', models.IntegerField()),
                ('comments', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('type', models.CharField(max_length=3)),
                ('category', models.IntegerField()),
                ('poster', models.IntegerField()),
            ],
            options={
                'db_table': 'screenshots',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ScreenshotsCats',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('title', models.CharField(max_length=250)),
                ('type', models.TextField()),
                ('image', models.TextField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'screenshots_cats',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Squad',
            fields=[
                ('sqdid', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=100)),
                ('leader', models.IntegerField()),
                ('formed', models.IntegerField()),
                ('divid', models.IntegerField()),
                ('goal', models.TextField()),
            ],
            options={
                'db_table': 'squad',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('username', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=255)),
                ('rank', models.IntegerField()),
                ('email', models.CharField(max_length=80)),
                ('aim', models.CharField(max_length=80)),
                ('name', models.CharField(max_length=80)),
                ('bday', models.DateField()),
                ('gender', models.IntegerField()),
                ('location', models.CharField(max_length=160)),
                ('timezone', models.CharField(max_length=10)),
                ('regdate', models.IntegerField()),
                ('news', models.IntegerField()),
                ('adduser', models.IntegerField()),
                ('edituser', models.IntegerField()),
                ('deluser', models.IntegerField()),
                ('promote', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('ip', models.CharField(max_length=40)),
                ('file', models.CharField(max_length=100)),
                ('onweb', models.IntegerField()),
                ('raid', models.IntegerField()),
                ('onvent', models.IntegerField()),
                ('onaim', models.IntegerField()),
                ('modcb', models.IntegerField()),
                ('welcome', models.IntegerField()),
                ('bugreport', models.IntegerField()),
                ('squad', models.IntegerField()),
                ('squaddate', models.IntegerField()),
                ('clearpass', models.CharField(max_length=45)),
                ('primary_game', models.IntegerField()),
                ('tsuid', models.TextField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UsersPass',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('userid', models.IntegerField()),
                ('updated', models.IntegerField()),
                ('oldmd5', models.CharField(max_length=255)),
                ('oldclear', models.CharField(max_length=255)),
                ('vent', models.IntegerField()),
                ('newclear', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'users_pass',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Variables',
            fields=[
                ('varnum', models.IntegerField(serialize=False, primary_key=True)),
                ('type', models.TextField()),
            ],
            options={
                'db_table': 'variables',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VariablesMessages',
            fields=[
                ('record', models.IntegerField(serialize=False, primary_key=True)),
                ('user_id', models.IntegerField()),
                ('text', models.TextField()),
                ('date', models.IntegerField()),
                ('game', models.IntegerField()),
            ],
            options={
                'db_table': 'variables_messages',
                'managed': False,
            },
            bases=(models.Model,),
        ),
    ]
